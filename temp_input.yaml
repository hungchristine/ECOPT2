# probably not necessary; covered by the gradient constraint
veh_seg_shr:
  def:
  - 0.08
  - 0.21
  - 0.27
  - 0.08
  - 0.03
  - 0.34 
#growth_constraint:
#  def: 0.2
#  loose: 0.4
#  stricta: 0.14

add_gradient:
 def: 0.1
#agg: 0.35
#slow: 0.05
 
#seg_batt_caps:
# def:
#  A: 26.6
#  B: 42.2
#  C: 42.2
#  D: 59.9
#  E: 75
#  F: 89.8

B_term_factors:
 def:
  VEH_PROD_EINT:
   ICE: 0.8
   BEV: 0.5
  VEH_PROD_CINT_CSNT: 
   ICE: 0.85
   BEV: 0.0.5
  VEH_OPER_EINT:
   ICE: 0.8
   BEV: 0.5
  VEH_EOLT_CINT:
   ICE: 0.9
   BEV: 0.9
   
r_term_factors:
   def: 0.3
   
u_term_factors:
 def:
  ICE: 2025
  BEV: 2020
 
#b_term_factor:
# default:
#  ICE: 0.85
#  BEV: 0.5


# add_gradient (for technology additions)
# veh_oper_dist [adjust lifetime to be in terms of km]
# find lifetime km driven by age? --> tec specific lifetimes as well


### try run with BEV_int_shr ==0 

