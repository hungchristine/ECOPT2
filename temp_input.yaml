# probably not necessary; covered by the gradient constraint
veh_seg_shr:
  def:
  - 0.08
  - 0.21
  - 0.27
  - 0.08
  - 0.03
  - 0.34 
  
tec_add_gradient:
 def: 0.2
#agg: 0.35
#slow: 0.05
 
seg_batt_caps:
 def:
  A: 26.6
  B: 42.2
  C: 42.2
  D: 59.9
  E: 75
  F: 89.8
 #trial:
 # A: 42.2
 # B: 42.2
 # C: 59.9
 # D: 59.9
 # E: 75
 # F: 89.8

B_term_prod:
 def:
  PROD_EINT:
   ICE: 
    full_veh: 0.9
   BEV: 
    batt: 0.4
    ROV: 0.8
  PROD_CINT_CSNT: 
   ICE: 
    full_veh: 0.9
   BEV:
    batt: 0.3
    ROV: 0.75

B_term_oper_EOL: 
 def: 
  OPER_EINT:
   ICE: 0.9
   BEV: 0.5
  EOLT_CINT:
   ICE: 0.9
   BEV: 0.9
   
r_term_factors:
   def: 
    BEV: 0.3
    ICE: 0.2

u_term_factors:
 def:
  ICE: 2025
  BEV: 2020


# add_gradient (for technology additions)
# veh_oper_dist [adjust lifetime to be in terms of km]
# find lifetime km driven by age? --> tec specific lifetimes as well


### try run with BEV_int_shr ==0 

